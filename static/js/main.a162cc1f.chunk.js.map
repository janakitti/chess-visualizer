{"version":3,"sources":["Square.js","initBoard.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onDragOver","e","event","index","preventDefault","onDrop","dropLoc","srcIndex","dataTransfer","getData","movePieceHandler","parseInt","style","backgroundColor","piece","wVal","bVal","squareColor","r","g","b","a","Math","floor","generateShade","onDragStart","console","log","setData","draggable","hidden","img","src","initBoard","initGrid","Array","fill","type","player","i","Board","state","grid","refreshBoard","bind","this","srcPos","destPos","getMoves","includes","setState","prevState","newGrid","JSON","parse","stringify","attackPath","vals","moves","valMult","pawnVal","knightVal","bishopVal","rookVal","queenVal","kingVal","x","y","v","paths","push","dir","path","pos","forAttacks","withinBoard","filter","val","legalMoves","length","curPos","slice","getPaths","map","getLegalMoves","flat","move","forEach","j","analyze","displayBoard","displayRow","renderSquare","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a162cc1f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction Square(props) {\r\n    function generateShade(index) {\r\n        const {wVal, bVal} = props.piece;\r\n        const shadeFactor = 2;\r\n        let squareColor = {r:50, g:50, b:50, a:1}\r\n        if(wVal > 0 || bVal > 0) {\r\n            squareColor = {r:wVal > 0 ? 200 : 50, g:50, b:bVal > 0 ? 200 : 50, a:(wVal + bVal) * shadeFactor/20};\r\n        } else {\r\n            squareColor = ((index % 2 === 0 && (Math.floor(index / 8) % 2) === 0) ||\r\n                (index % 2 === 1 && ((Math.floor(index / 8) % 2) === 1))) ? {r:202, g:212, b:219, a:1} : {r:171, g:180, b:186, a:1}\r\n        }\r\n        return \"rgba(\" + squareColor.r + \", \" + squareColor.g + \", \" + squareColor.b + \", \" + squareColor.a + \")\"\r\n    }\r\n\r\n    function onDragStart(event, index) {\r\n        console.log(\"S:\" + index)\r\n        event.dataTransfer.setData(\"id\", index)\r\n    }\r\n\r\n    function onDragOver(event, index) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function onDrop(event, dropLoc) {\r\n        let srcIndex = event.dataTransfer.getData(\"id\");\r\n        props.movePieceHandler(parseInt(srcIndex), parseInt(props.index))\r\n    }\r\n\r\n    return (\r\n        <div className=\"square\" onDragOver={(e) => onDragOver(e, props.index)}\r\n                onDrop={(e) => onDrop(e, \"dest\")}\r\n            style={{backgroundColor: generateShade(props.index)}}>\r\n            <div className=\"piece-container\" onDragStart={(e) => onDragStart(e, props.index)} draggable>\r\n                <img className=\"piece-img\" hidden={props.piece.img === \"\"} src={props.piece.img}/>\r\n                {/*{props.piece.type}, {props.piece.player}, {props.piece.wVal}, {props.piece.bVal}*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","\r\n\r\nfunction initBoard() {\r\n\r\n    let initGrid = Array(64).fill({type: \"e\", player: \"\", wVal: 0, bVal: 0, img:\"\"});\r\n    for(let i = 8; i < 16; i++){\r\n        initGrid[i] = {type: \"pi\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg\"};\r\n        initGrid[i+40] = {type: \"pi\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg\"};\r\n    }\r\n    for(let i = 16; i < 48; i++){\r\n        initGrid[i] = {type: \"e\", player: \"\", wVal: 0, bVal: 0, img:\"\"};\r\n    }\r\n    initGrid[0] = {type: \"ri\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"};\r\n    initGrid[7] = {type: \"ri\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg\"};\r\n    initGrid[56] = {type: \"ri\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\"};\r\n    initGrid[63] = {type: \"ri\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg\"};\r\n  \r\n    initGrid[1] = {type: \"n\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"};\r\n    initGrid[6] = {type: \"n\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg\"};\r\n    initGrid[57] = {type: \"n\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\"};\r\n    initGrid[62] = {type: \"n\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg\"};\r\n  \r\n    initGrid[2] = {type: \"b\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"};\r\n    initGrid[5] = {type: \"b\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"};\r\n    initGrid[58] = {type: \"b\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\"};\r\n    initGrid[61] = {type: \"b\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\"};\r\n  \r\n    initGrid[3] = {type: \"q\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"};\r\n    initGrid[4] = {type: \"ki\", player: \"b\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg\"};\r\n  \r\n    initGrid[59] = {type: \"q\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\"};\r\n    initGrid[60] = {type: \"ki\", player: \"w\", wVal: 0, bVal: 0, img:\"https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg\"};\r\n\r\n    // initGrid[19] = {type: \"p\", player: \"b\", val: 0};\r\n    // initGrid[11] = {type: \"e\", player: \"\", val: 0};\r\n\r\n    return initGrid\r\n}\r\n\r\nexport default initBoard\r\n","import React from \"react\"\r\nimport './Board.css';\r\n\r\nimport Square from \"./Square\"\r\nimport initBoard from \"./initBoard\"\r\n\r\nclass Board extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            grid: initBoard()\r\n        }\r\n        this.refreshBoard = this.refreshBoard.bind(this)\r\n        this.movePieceHandler = this.movePieceHandler.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshBoard()\r\n    }\r\n\r\n    movePieceHandler(srcPos, destPos) {\r\n        if(this.getMoves(parseInt(srcPos)).includes(destPos)) {\r\n            this.setState(prevState => {\r\n                let newGrid = JSON.parse(JSON.stringify(prevState.grid));\r\n                if (newGrid[srcPos].type === \"pi\" && (Math.floor(destPos / 8) === 3 || Math.floor(destPos / 8) === 4)) {\r\n                    newGrid[destPos] = JSON.parse(JSON.stringify({...newGrid[srcPos], type: \"pe0\"}));\r\n                    if (newGrid[srcPos].player === \"w\") {\r\n                        newGrid[srcPos-8] = {type: \"ep\", player: \"w\", wVal: 0, bVal: 0};\r\n                    } else if (newGrid[srcPos].player === \"b\") {\r\n                        newGrid[srcPos+8] = {type: \"ep\", player: \"b\", wVal: 0, bVal: 0};\r\n                    }\r\n                    newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                } else if (newGrid[srcPos].type === \"pi\" && !(Math.floor(destPos / 8) === 1 || Math.floor(destPos / 8) === 6)) {\r\n                    newGrid[destPos] = JSON.parse(JSON.stringify({...newGrid[srcPos], type: \"p\"}));\r\n                    newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                } else if ((Math.floor(destPos / 8) === 2 || Math.floor(destPos / 8) === 5) && newGrid[destPos].type === \"e\" && newGrid[destPos].player !== \"\") {\r\n                    if (newGrid[destPos].player === \"w\") {\r\n                        newGrid[destPos-8] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    } else if (newGrid[destPos].player === \"b\") {\r\n                        newGrid[destPos+8] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    }\r\n                    newGrid[destPos] = JSON.parse(JSON.stringify(newGrid[srcPos]));\r\n                    newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                } else if (newGrid[srcPos].type === \"ki\") {\r\n                    if (destPos === 2 && newGrid[0].type === \"ri\") {\r\n                        newGrid[2] = {...newGrid[srcPos], type: \"k\"}\r\n                        newGrid[3] = {...newGrid[0], type:\"r\"};\r\n                        newGrid[0] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                        newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    } else if (destPos === 6 && newGrid[7].type === \"ri\") {\r\n                        newGrid[6] = {...newGrid[srcPos], type: \"k\"}\r\n                        newGrid[5] = {...newGrid[7], type:\"r\"};\r\n                        newGrid[7] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                        newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    } else if (destPos === 62 && newGrid[63].type === \"ri\") {\r\n                        newGrid[62] = {...newGrid[srcPos], type: \"k\"}\r\n                        newGrid[61] = {...newGrid[63], type:\"r\"};\r\n                        newGrid[63] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                        newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    } else if (destPos === 58 && newGrid[56].type === \"ri\") {\r\n                        newGrid[58] = {...newGrid[srcPos], type: \"k\"}\r\n                        newGrid[59] = {...newGrid[56], type:\"r\"};\r\n                        newGrid[56] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                        newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    } else {\r\n                        newGrid[destPos] = {...newGrid[srcPos], type: \"k\"};\r\n                        newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                    }\r\n\r\n                } else {\r\n                    newGrid[destPos] = JSON.parse(JSON.stringify(newGrid[srcPos]));\r\n                    newGrid[srcPos] = {type: \"e\", player: \"\", wVal: 0, bVal: 0};\r\n                }\r\n\r\n\r\n                return {grid: newGrid};\r\n            })\r\n        }\r\n        this.refreshBoard()\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return <Square key={i} index={i} piece={this.state.grid[i]} movePieceHandler={this.movePieceHandler} />\r\n    }\r\n\r\n    getPaths(piece, attackPath=true) {\r\n        let vals = []\r\n        let moves = []\r\n        const valMult = piece.player === \"w\" ? 1 : -1\r\n\r\n        const pawnVal = 1;\r\n        const knightVal = 3;\r\n        const bishopVal = 3;\r\n        const rookVal = 5;\r\n        const queenVal = 9;\r\n        const kingVal = 1;\r\n\r\n        if (piece.type === \"n\") {\r\n            vals = [\r\n                [{x:-1, y:2, v:knightVal*valMult}],\r\n                [{x:1, y:2, v:knightVal*valMult}],\r\n                [{x:-1, y:-2, v:knightVal*valMult}],\r\n                [{x:1, y:-2, v:knightVal*valMult}],\r\n                [{x:-2, y:1, v:knightVal*valMult}],\r\n                [{x:2, y:1, v:knightVal*valMult}],\r\n                [{x:-2, y:-1, v:knightVal*valMult}],\r\n                [{x:2, y:-1, v:knightVal*valMult}]\r\n            ]\r\n            moves = vals;\r\n        } else if (piece.type === \"ri\" || piece.type === \"r\") {\r\n            let paths = [[],[],[],[]]\r\n            for(let i=1; i<=7; i++) {\r\n                paths[0].push({x:0, y:-i, v:rookVal*valMult})\r\n                paths[1].push({x:i, y:0, v:rookVal*valMult})\r\n                paths[2].push({x:0, y:i, v:rookVal*valMult})\r\n                paths[3].push({x:-i, y:0, v:rookVal*valMult})\r\n            }\r\n            vals = paths;\r\n            moves = vals;\r\n        } else if (piece.type === \"b\") {\r\n            let paths = [[],[],[],[]]\r\n            for(let i=1; i<=7; i++) {\r\n                paths[0].push({x:-i, y:-i, v:bishopVal*valMult})\r\n                paths[1].push({x:i, y:-i, v:bishopVal*valMult})\r\n                paths[2].push({x:i, y:i, v:bishopVal*valMult})\r\n                paths[3].push({x:-i, y:i, v:bishopVal*valMult})\r\n            }\r\n            vals = paths;\r\n            moves = vals;\r\n        } else if (piece.type === \"q\") {\r\n            let paths = [[],[],[],[],[],[],[],[]]\r\n            for(let i=1; i<=7; i++) {\r\n                paths[0].push({x:0, y:-i, v:queenVal*valMult})\r\n                paths[1].push({x:i, y:0, v:queenVal*valMult})\r\n                paths[2].push({x:0, y:i, v:queenVal*valMult})\r\n                paths[3].push({x:-i, y:0, v:queenVal*valMult})\r\n                paths[4].push({x:-i, y:-i, v:queenVal*valMult})\r\n                paths[5].push({x:i, y:-i, v:queenVal*valMult})\r\n                paths[6].push({x:i, y:i, v:queenVal*valMult})\r\n                paths[7].push({x:-i, y:i, v:queenVal*valMult})\r\n            }\r\n            vals = paths;\r\n            moves = vals;\r\n        } else if (piece.type === \"ki\" || piece.type === \"k\") {\r\n            vals = [\r\n                [{x:0, y:-1, v:kingVal*valMult}],\r\n                [{x:1, y:-1, v:kingVal*valMult}],\r\n                [{x:1, y:0, v:kingVal*valMult}],\r\n                [{x:1, y:1, v:kingVal*valMult}],\r\n                [{x:0, y:1, v:kingVal*valMult}],\r\n                [{x:-1, y:1, v:kingVal*valMult}],\r\n                [{x:-1, y:0, v:kingVal*valMult}],\r\n                [{x:-1, y:-1, v:kingVal*valMult}],\r\n            ]\r\n            if (piece.type === \"ki\") {\r\n                moves = [\r\n                    [{x:0, y:-1, v:kingVal*valMult}],\r\n                    [{x:1, y:-1, v:kingVal*valMult}],\r\n                    [{x:1, y:0, v:kingVal*valMult}, {x:2, y:0, v:kingVal*valMult}],\r\n                    [{x:1, y:1, v:kingVal*valMult}],\r\n                    [{x:0, y:1, v:kingVal*valMult}],\r\n                    [{x:-1, y:1, v:kingVal*valMult}],\r\n                    [{x:-1, y:0, v:kingVal*valMult}, {x:-2, y:0, v:kingVal*valMult}],\r\n                    [{x:-1, y:-1, v:kingVal*valMult}],\r\n                ]\r\n            } else {\r\n                moves = vals;\r\n            }\r\n        } else if (piece.type === \"pi\" || piece.type === \"pe\" || piece.type === \"pe0\" || piece.type === \"p\") {\r\n            const dir = valMult > 0 ? -1 : 1;\r\n            vals = [\r\n                [{x:-1, y:dir, v:pawnVal*valMult}],\r\n                [{x:1, y:dir, v:pawnVal*valMult}],\r\n            ]\r\n            if (piece.type === \"pi\") {\r\n                moves = [\r\n                    [{x:0, y:dir, v:pawnVal*valMult}, {x:0, y:2*dir, v:pawnVal*valMult}],\r\n                    [{x:-1, y:dir, v:pawnVal*valMult}],\r\n                    [{x:1, y:dir, v:pawnVal*valMult}],\r\n                ]\r\n            } else if (piece.type === \"pe\" || piece.type === \"p\") {\r\n                moves = [\r\n                    [{x:0, y:dir, v:pawnVal*valMult}],\r\n                    [{x:-1, y:dir, v:pawnVal*valMult}],\r\n                    [{x:1, y:dir, v:pawnVal*valMult}],\r\n                ]\r\n            }\r\n        }\r\n        return attackPath ? vals : moves\r\n    }\r\n\r\n    getLegalMoves(path, pos, grid, forAttacks=true) {\r\n        let withinBoard = path.filter(val =>\r\n            ((pos % 8) + val.x >= 0 && (pos % 8) + val.x <= 7) &&\r\n            (Math.floor(pos / 8) + val.y >= 0 && Math.floor(pos / 8) + val.y <= 7)\r\n        )\r\n        let legalMoves = withinBoard;\r\n        for(let i = 0; i < withinBoard.length; i++) {\r\n            const curPos = parseInt(pos) + parseInt(withinBoard[i].x) + 8*parseInt(withinBoard[i].y)\r\n            if(grid[curPos].player === grid[pos].player) {\r\n                legalMoves = withinBoard.slice(0, i);\r\n                break;\r\n            } else if (!forAttacks && (grid[pos].type === \"pi\" || grid[pos].type === \"pe\" || grid[pos].type === \"p\")) {\r\n                if(withinBoard[i].x === 0 && grid[curPos].player !== grid[pos].player && grid[curPos].player !== \"\") {\r\n                    legalMoves = withinBoard.slice(0, i);\r\n                } else if (withinBoard[i].x !== 0 && grid[curPos].player === \"\") {\r\n                    legalMoves = withinBoard.slice(0, i);\r\n                } else if (withinBoard[i].x !== 0 && grid[curPos].player !== grid[pos].player && grid[curPos].player !== \"\") {\r\n                    legalMoves = withinBoard.slice(0, i+1);\r\n                }\r\n                break;\r\n            } else if (grid[curPos].player !== \"\" && grid[curPos].player !== grid[pos].player) {\r\n                legalMoves = withinBoard.slice(0, i + 1);\r\n                break;\r\n            }\r\n        }\r\n        return legalMoves\r\n    }\r\n\r\n    getMoves(pos) {\r\n        const grid = JSON.parse(JSON.stringify(this.state.grid));\r\n        let moves = this.getPaths(grid[pos], false)\r\n        moves = moves.map(path => this.getLegalMoves(path, pos, grid, false)).flat();\r\n        moves = moves.map(move => {\r\n            return(pos + move.x + 8*move.y)\r\n        })\r\n\r\n        return moves\r\n    }\r\n\r\n    analyze(pos, piece, grid) {\r\n        let vals = this.getPaths(piece, true)\r\n\r\n        vals = vals.map(path => this.getLegalMoves(path, pos, grid)).flat();\r\n\r\n        vals.forEach(v => {\r\n            if(v.v > 0) {\r\n                grid[pos + v.x + 8*v.y].wVal = grid[pos + v.x + 8*v.y].wVal + (v.v)\r\n            } else {\r\n                grid[pos + v.x + 8*v.y].bVal = grid[pos + v.x + 8*v.y].bVal - (v.v)\r\n            }\r\n\r\n        })\r\n\r\n        return grid\r\n    }\r\n\r\n    refreshBoard() {\r\n        this.setState(prevState => {\r\n            let newGrid = JSON.parse(JSON.stringify(prevState.grid));\r\n            for(let i = 0; i < 8; i++) {\r\n                for(let j = 0; j < 8; j++) {\r\n                    newGrid[i + 8*j].wVal = 0;\r\n                    newGrid[i + 8*j].bVal = 0;\r\n                }\r\n            }\r\n            for(let i = 0; i < 8; i++) {\r\n                for(let j = 0; j < 8; j++) {\r\n\r\n                    if (newGrid[8*i + j].type === \"pe0\") {\r\n                        newGrid[8*i + j] = JSON.parse(JSON.stringify({...newGrid[8*i + j], type: \"pe\"}));\r\n                    } else if (newGrid[8*i + j].type === \"pe\") {\r\n                        newGrid[8*i + j] = JSON.parse(JSON.stringify({...newGrid[8*i + j], type: \"p\"}));\r\n                    }\r\n\r\n                    if (newGrid[8*i + j].type === \"ep\" && newGrid[8*i + j].player !== \"\") {\r\n                        newGrid[8*i + j] = JSON.parse(JSON.stringify({...newGrid[8*i + j], type: \"e\"}));\r\n                    } else if (newGrid[8*i + j].type === \"e\" && newGrid[8*i + j].player !== \"\") {\r\n                        newGrid[8*i + j] = JSON.parse(JSON.stringify({...newGrid[8*i + j], player: \"\"}));\r\n                    }\r\n                    newGrid = this.analyze(8*i + j, newGrid[8*i + j], newGrid);\r\n                }\r\n            }\r\n            return {grid: newGrid}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\");\r\n        const displayBoard = [];\r\n        for(let i = 0; i < 8; i++) {\r\n            const displayRow = [];\r\n            for(let j = 0; j < 8; j++) {\r\n                displayRow.push(this.renderSquare(8*i + j))\r\n            }\r\n            displayBoard.push(<div key={i} className=\"board-row\">{displayRow}</div>)\r\n        }\r\n        return (\r\n            <div className=\"board\">\r\n                {displayBoard}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board\r\n","import React from \"react\"\nimport './App.css';\n\nimport Board from './Board';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app-body\">\n      <div className=\"header\">\n          <div>\n              <h1 className=\"title\">Chess Visualizer</h1>\n              <h3 className=\"subtitle\">Piece Path Visualizer</h3>\n          </div>\n      </div>\n\n        <div className=\"board-container\">\n          <Board />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}